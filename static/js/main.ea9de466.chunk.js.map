{"version":3,"sources":["components/TodoItem/TodoItem.module.css","components/Button/Button.module.css","components/Input/Input.module.css","components/Form/Form.module.css","components/TodoList/TodoList.module.css","redux/constants.tsx","redux/actions/todosActions.tsx","components/Button/Button.tsx","components/Input/Input.tsx","components/Form/Form.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","redux/reducers/todosReducer.tsx","redux/reducers/counterReducer.tsx","redux/store.tsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ACTIONS","TODOS_VISIBILITY","showAll","type","showActive","showDone","Button","text","onClick","className","styles","addButton","Input","value","onChange","todoInput","placeholder","Form","addNewTodo","useState","setText","main","event","target","trim","TodoItem","completed","time","onDelete","onComplete","showTime","setShowTime","todo","style","textDecoration","TodoList","date","Date","todos","useSelector","state","todosReducer","todosVisibility","dispatch","useDispatch","routes","to","action","onClickDelete","id","deleteTodo","onClickComplete","completeTodo","filterTodos","filter","item","completedCount","reduce","prev","curr","filteredTodos","headerImage","toLocaleString","day","weekday","month","list","info","length","addTodo","todosChoise","map","console","log","defaultState","defaultSate","data","store","createStore","combineReducers","newTodo","Math","random","toString","slice","toLocaleDateString","newTodos","counterReducer","localState","localStorage","getItem","JSON","parse","e","warn","loadFromLocalStorage","composeWithDevTools","subscribe","stringify","setItem","saveToLocalStorage","getState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea9de466.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"TodoItem_todo__1aQUH\",\"time\":\"TodoItem_time__3Ymwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addButton\":\"Button_addButton__h7dlu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoInput\":\"Input_todoInput__26MO_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Form_main__30oFp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"TodoList_main__12gfs\",\"headerImage\":\"TodoList_headerImage___OGSi\",\"date\":\"TodoList_date__3F2th\",\"list\":\"TodoList_list__3EOQj\",\"info\":\"TodoList_info__17tHs\",\"todosChoise\":\"TodoList_todosChoise__1BdBj\"};","export const ACTIONS = {\r\n  ADD_TODO: \"ADD_TODO\",\r\n  DELETE_TODO: \"DELETE_TODO\",\r\n  COMPLETE_TODO: \"COMPLETE_TODO\",\r\n};\r\n\r\nexport const TODOS_VISIBILITY = {\r\n  SHOW_ALL: \"SHOW_ALL\",\r\n  SHOW_ACTIVE: \"SHOW_ACTIVE\",\r\n  SHOW_DONE: \"SHOW_DONE\",\r\n};\r\n","import { ACTIONS, TODOS_VISIBILITY } from \"../constants\";\r\n\r\nexport const addTodo = (text: string) => {\r\n  return {\r\n    type: ACTIONS.ADD_TODO,\r\n    text: text,\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (id: string) => {\r\n  return {\r\n    type: ACTIONS.DELETE_TODO,\r\n    id: id,\r\n  };\r\n};\r\n\r\nexport const completeTodo = (id: string) => {\r\n  return {\r\n    type: ACTIONS.COMPLETE_TODO,\r\n    id: id,\r\n  };\r\n};\r\n\r\nexport const showAll = () => {\r\n  return {\r\n    type: TODOS_VISIBILITY.SHOW_ALL,\r\n  };\r\n};\r\n\r\nexport const showActive = () => {\r\n  return {\r\n    type: TODOS_VISIBILITY.SHOW_ACTIVE,\r\n  };\r\n};\r\n\r\nexport const showDone = () => {\r\n  return {\r\n    type: TODOS_VISIBILITY.SHOW_DONE,\r\n  };\r\n};\r\n","import styles from \"./Button.module.css\";\r\n\r\ninterface IProps {\r\n  text: string;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const Button = ({ text, onClick }: IProps) => {\r\n  return (\r\n    <button className={styles.addButton} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n","import styles from \"./Input.module.css\";\r\nimport { ChangeEventHandler } from \"react\";\r\n\r\ninterface IProps {\r\n  value: string;\r\n  onChange: ChangeEventHandler<HTMLInputElement>;\r\n}\r\n\r\nexport const Input = ({ value, onChange }: IProps) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      onChange={onChange}\r\n      value={value}\r\n      className={styles.todoInput}\r\n      placeholder=\"Add a new task...\"\r\n    />\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { ChangeEvent } from \"react\";\r\nimport { Button } from \"../Button/Button\";\r\nimport { Input } from \"../Input/Input\";\r\nimport styles from \"./Form.module.css\";\r\n\r\ninterface IProps {\r\n  addNewTodo: (text: string) => void;\r\n}\r\n\r\nexport const Form = ({ addNewTodo }: IProps) => {\r\n  const [text, setText] = useState<string>(\"\");\r\n\r\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handeAddNewTodo = () => {\r\n    addNewTodo(text.trim());\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <Input value={text} onChange={onChange} />\r\n      <Button text=\"&#43;\" onClick={handeAddNewTodo} />\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { Button } from \"../Button/Button\";\r\nimport styles from \"./TodoItem.module.css\";\r\n\r\ninterface IProps {\r\n  text: string;\r\n  completed: boolean;\r\n  time: string;\r\n  onDelete: () => void;\r\n  onComplete: () => void;\r\n}\r\n\r\nexport const TodoItem = ({\r\n  text,\r\n  completed,\r\n  time,\r\n  onDelete,\r\n  onComplete,\r\n}: IProps) => {\r\n  const [showTime, setShowTime] = useState(false);\r\n\r\n  const toggleShowTime = () => {\r\n    setShowTime(!showTime);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.todo}>\r\n      <Button text=\"&#10003;\" onClick={onComplete} />\r\n      <p\r\n        onClick={toggleShowTime}\r\n        style={{\r\n          textDecoration:\r\n            completed === true ? \"gray wavy line-through\" : \"none\",\r\n        }}\r\n      >\r\n        {text}\r\n      </p>\r\n      <Button text=\"&#10007;\" onClick={onDelete} />\r\n      {showTime ? <p className={styles.time}>{time}</p> : null}\r\n    </div>\r\n  );\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  addTodo,\r\n  completeTodo,\r\n  deleteTodo,\r\n  showActive,\r\n  showAll,\r\n  showDone,\r\n} from \"../../redux/actions/todosActions\";\r\nimport { TODOS_VISIBILITY } from \"../../redux/constants\";\r\nimport { IState } from \"../../redux/store\";\r\nimport { Form } from \"../Form/Form\";\r\nimport { TodoItem } from \"../TodoItem/TodoItem\";\r\nimport styles from \"./TodoList.module.css\";\r\n\r\nexport const TodoList = () => {\r\n  const date = new Date();\r\n  const todos = useSelector((state: IState) => state.todosReducer.todos);\r\n  const todosVisibility = useSelector((state: IState) => state.todosVisibility);\r\n  const dispatch = useDispatch();\r\n\r\n  const routes = [\r\n    { to: \"/\", text: \"All\", action: showAll },\r\n    { to: \"/active\", text: \"Active\", action: showActive },\r\n    { to: \"/done\", text: \"Done\", action: showDone },\r\n  ];\r\n\r\n  const onClickDelete = (id: string) => {\r\n    dispatch(deleteTodo(id));\r\n  };\r\n\r\n  const onClickComplete = (id: string) => {\r\n    dispatch(completeTodo(id));\r\n  };\r\n\r\n  const addNewTodo = (text: string) => {\r\n    return text !== \"\" ? dispatch(addTodo(text)) : null;\r\n  };\r\n\r\n  const filterTodos = (todos: any, todosVisibility: string) => {\r\n    switch (todosVisibility) {\r\n      case TODOS_VISIBILITY.SHOW_DONE:\r\n        return todos.filter((item: { completed: boolean }) => item.completed);\r\n      case TODOS_VISIBILITY.SHOW_ACTIVE:\r\n        return todos.filter((item: { completed: boolean }) => !item.completed);\r\n      default:\r\n        return todos;\r\n    }\r\n  };\r\n\r\n  const completedCount = todos.reduce((prev, curr) => {\r\n    if (curr.completed) {\r\n      return prev + 1;\r\n    }\r\n    return prev;\r\n  }, 0);\r\n\r\n  const filteredTodos = filterTodos(todos, todosVisibility);\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <div className={styles.headerImage}>\r\n        <p>{date.toLocaleString(\"en-US\", { day: \"numeric\" })}</p>\r\n\r\n        <div className={styles.date}>\r\n          <p>{date.toLocaleString(\"en-US\", { weekday: \"long\" })}</p>\r\n          <p>{date.toLocaleString(\"en-US\", { month: \"long\" })}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.list}>\r\n        <div className={styles.info}>\r\n          <p>Your tasks</p>\r\n          <p>\r\n            {completedCount} / {todos.length} tasks\r\n          </p>\r\n        </div>\r\n\r\n        <Form addNewTodo={addNewTodo} />\r\n\r\n        <div className={styles.todosChoise}>\r\n          {routes.map(({ to, text, action }) => (\r\n            <Link key={text} to={to} onClick={() => dispatch(action())}>\r\n              {text}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n\r\n        {filteredTodos.map((item: any) => {\r\n          return (\r\n            <TodoItem\r\n              key={item.id}\r\n              text={item.text}\r\n              onComplete={() => onClickComplete(item.id)}\r\n              onDelete={() => onClickDelete(item.id)}\r\n              completed={item.completed}\r\n              time={item.time}\r\n            />\r\n          );\r\n        })}\r\n        {todos.length === 0 ? <p>Let's do it!</p> : null}\r\n        {console.log(filterTodos(todos, \"SHOW_DONE\"))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { ACTIONS, TODOS_VISIBILITY } from \"../constants\";\r\n\r\nexport interface ITodoItem {\r\n  id: string;\r\n  text: string;\r\n  completed: boolean;\r\n  time: string;\r\n}\r\n\r\nexport interface ITodosState {\r\n  todos: ITodoItem[];\r\n}\r\n\r\nexport const defaultState: ITodosState = {\r\n  todos: [],\r\n};\r\n\r\nexport const todosReducer = (state = defaultState, action: any) => {\r\n  switch (action.type) {\r\n    case ACTIONS.ADD_TODO: {\r\n      const date = new Date();\r\n      const newTodo = {\r\n        id: \"id\" + Math.random().toString(16).slice(2),\r\n        text: action.text,\r\n        completed: false,\r\n        time: `${date.toLocaleDateString()} ${date.toLocaleDateString()}`,\r\n      };\r\n      const newTodos = [...state.todos, newTodo];\r\n\r\n      return {\r\n        todos: newTodos,\r\n      };\r\n    }\r\n\r\n    case ACTIONS.DELETE_TODO: {\r\n      const newTodos = state.todos.filter((item) => item.id !== action.id);\r\n\r\n      return {\r\n        todos: newTodos,\r\n      };\r\n    }\r\n\r\n    case ACTIONS.COMPLETE_TODO: {\r\n      const newTodos = state.todos.map((item) => {\r\n        if (item.id === action.id) {\r\n          return { ...item, completed: !item.completed };\r\n        }\r\n        return item;\r\n      });\r\n\r\n      return {\r\n        todos: newTodos,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const todosVisibility = (\r\n  state = TODOS_VISIBILITY.SHOW_ALL,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case TODOS_VISIBILITY.SHOW_ALL:\r\n      return TODOS_VISIBILITY.SHOW_ALL;\r\n    case TODOS_VISIBILITY.SHOW_ACTIVE:\r\n      return TODOS_VISIBILITY.SHOW_ACTIVE;\r\n    case TODOS_VISIBILITY.SHOW_DONE:\r\n      return TODOS_VISIBILITY.SHOW_DONE;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export interface IState {\r\n  value: number;\r\n  data: number[];\r\n  text: string;\r\n}\r\n\r\nconst defaultSate: IState = {\r\n  value: 0,\r\n  data: [],\r\n  text: \"\",\r\n};\r\n\r\nexport const counterReducer = (state = defaultSate, action: any) => {\r\n  switch (action.type) {\r\n    case \"counter/incremented\":\r\n      return { ...state, value: state.value + 1 };\r\n    case \"counter/decremented\":\r\n      return { value: state.value - 1, data: [], text: \"\" };\r\n    case \"counter/reset\":\r\n      return { value: 0, data: [], text: \"\" };\r\n    case \"counter/setValue\":\r\n      return { value: action.value, data: [], text: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport {\r\n  todosReducer,\r\n  defaultState,\r\n  ITodosState,\r\n  todosVisibility,\r\n} from \"./reducers/todosReducer\";\r\nimport { counterReducer } from \"./reducers/counterReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport interface IState {\r\n  todosReducer: ITodosState;\r\n  todosVisibility: string;\r\n  counterReducer: any;\r\n}\r\n\r\nfunction saveToLocalStorage(state: any) {\r\n  try {\r\n    const localState = JSON.stringify(state);\r\n    localStorage.setItem(\"todosLocalState\", localState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const localState = localStorage.getItem(\"todosLocalState\");\r\n    if (localState === null) return undefined;\r\n    return JSON.parse(localState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst store = createStore(\r\n  combineReducers({ todosReducer, todosVisibility, counterReducer }),\r\n  loadFromLocalStorage(),\r\n  composeWithDevTools()\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;\r\n","import \"./App.css\";\nimport { TodoList } from \"./components/TodoList/TodoList\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <TodoList />\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}